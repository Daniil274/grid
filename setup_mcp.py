#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Grid MCP Server
"""

import sys
import subprocess
import os
from pathlib import Path

def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é MCP –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º pip
        subprocess.run([sys.executable, "-m", "pip", "install", "--upgrade", "pip"], check=True)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        subprocess.run([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"], check=True)
        
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False

def setup_config():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    config_path = Path("config.yaml")
    example_path = Path("config.yaml.example")
    
    if config_path.exists():
        print("‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True
    
    if example_path.exists():
        print("üìã –ö–æ–ø–∏—Ä—É—é –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        config_path.write_text(example_path.read_text(encoding='utf-8'), encoding='utf-8')
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞")
        print("üí° –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config.yaml –¥–ª—è –≤–∞—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫")
        return True
    else:
        print("‚ùå –§–∞–π–ª config.yaml.example –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def test_setup():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
        import mcp
        from core.config import Config
        from core.security_agent_factory import SecurityAwareAgentFactory
        
        # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = Config("config.yaml")
        agents = config.list_agents()
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(agents)} –∞–≥–µ–Ω—Ç–æ–≤:")
        for key, desc in agents.items():
            print(f"  ‚Ä¢ {key}: {desc}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."""
    print("üõ†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Grid Agent System MCP Server")
    print("=" * 60)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not install_dependencies():
        sys.exit(1)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not setup_config():
        sys.exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    if not test_setup():
        sys.exit(1)
    
    print("=" * 60)
    print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config.yaml –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
    print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python start_mcp_server.py")
    print("   3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫ MCP –∫–ª–∏–µ–Ω—Ç—É (Claude Desktop, Cursor, etc.)")

if __name__ == "__main__":
    main() 